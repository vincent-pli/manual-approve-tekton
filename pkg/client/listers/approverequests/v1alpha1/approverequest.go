/*
Copyright 2020 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/vincent-pli/manual-approve-tekton/pkg/apis/approverequests/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApproveRequestLister helps list ApproveRequests.
// All objects returned here must be treated as read-only.
type ApproveRequestLister interface {
	// List lists all ApproveRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ApproveRequest, err error)
	// ApproveRequests returns an object that can list and get ApproveRequests.
	ApproveRequests(namespace string) ApproveRequestNamespaceLister
	ApproveRequestListerExpansion
}

// approveRequestLister implements the ApproveRequestLister interface.
type approveRequestLister struct {
	indexer cache.Indexer
}

// NewApproveRequestLister returns a new ApproveRequestLister.
func NewApproveRequestLister(indexer cache.Indexer) ApproveRequestLister {
	return &approveRequestLister{indexer: indexer}
}

// List lists all ApproveRequests in the indexer.
func (s *approveRequestLister) List(selector labels.Selector) (ret []*v1alpha1.ApproveRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApproveRequest))
	})
	return ret, err
}

// ApproveRequests returns an object that can list and get ApproveRequests.
func (s *approveRequestLister) ApproveRequests(namespace string) ApproveRequestNamespaceLister {
	return approveRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApproveRequestNamespaceLister helps list and get ApproveRequests.
// All objects returned here must be treated as read-only.
type ApproveRequestNamespaceLister interface {
	// List lists all ApproveRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ApproveRequest, err error)
	// Get retrieves the ApproveRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ApproveRequest, error)
	ApproveRequestNamespaceListerExpansion
}

// approveRequestNamespaceLister implements the ApproveRequestNamespaceLister
// interface.
type approveRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApproveRequests in the indexer for a given namespace.
func (s approveRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApproveRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApproveRequest))
	})
	return ret, err
}

// Get retrieves the ApproveRequest from the indexer for a given namespace and name.
func (s approveRequestNamespaceLister) Get(name string) (*v1alpha1.ApproveRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("approverequest"), name)
	}
	return obj.(*v1alpha1.ApproveRequest), nil
}
